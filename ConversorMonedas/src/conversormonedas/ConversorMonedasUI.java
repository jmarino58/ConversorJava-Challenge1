package conversormonedas;

import java.awt.event.MouseListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

public class ConversorMonedasUI extends javax.swing.JFrame {

    String [] monedas={"Peso argentino","Boliviano","Real brasileño","Dólar canadiense","Peso chileno","Peso colombiano"
            ,"Colón costarricense","Peso cubano","Dólar estadounidense","Peso mexicano","Guaraní paraguayo"
            ,"Sol peruano","Peso dominicano","Peso uruguayo","Bolívar venezolano","Euro"};
            
    String temp[]={"Kelvin","Celsius","Farenheit"};

   
    
    public ConversorMonedasUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmb_tipoConversion = new javax.swing.JComboBox<>();
        lbl_tipoConversion = new javax.swing.JLabel();
        lbl_monedaOrigen = new javax.swing.JLabel();
        cmb_monedaOrigen = new javax.swing.JComboBox<>();
        lbl_monedaDestino = new javax.swing.JLabel();
        cmb_monedaDestino = new javax.swing.JComboBox<>();
        lbl_cantidad = new javax.swing.JLabel();
        txt_cantidadOrigen = new javax.swing.JTextField();
        lbl_cantidadDestino = new javax.swing.JLabel();
        btn_convertir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("CONVERSOR DE MONEDAS");
        setAlwaysOnTop(true);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(new java.awt.Color(192, 244, 244));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        cmb_tipoConversion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Monedas", "Temperaturas" }));
        cmb_tipoConversion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_tipoConversionItemStateChanged(evt);
            }
        });
        cmb_tipoConversion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_tipoConversionActionPerformed(evt);
            }
        });

        lbl_tipoConversion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_tipoConversion.setText("Seleccione Tipo de Conversion");

        lbl_monedaOrigen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_monedaOrigen.setText("Moneda Origen");
        lbl_monedaOrigen.setToolTipText("");

        cmb_monedaOrigen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Peso argentino", "Boliviano", "Real brasileño", "Dólar canadiense", "Peso chileno", "Peso colombiano", "Colón costarricense", "Peso cubano", "Dólar estadounidense", "Peso mexicano", "Guaraní paraguayo", "Sol peruano", "Peso dominicano", "Peso uruguayo", "Bolívar venezolano", "Euro" }));
        cmb_monedaOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_monedaOrigenActionPerformed(evt);
            }
        });

        lbl_monedaDestino.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_monedaDestino.setText("Moneda Destino");

        cmb_monedaDestino.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Peso argentino", "Boliviano", "Real brasileño", "Dólar canadiense", "Peso chileno", "Peso colombiano", "Colón costarricense", "Peso cubano", "Dólar estadounidense", "Peso mexicano", "Guaraní paraguayo", "Sol peruano", "Peso dominicano", "Peso uruguayo", "Bolívar venezolano", "Euro" }));

        lbl_cantidad.setText("Ingrese Cantidad");

        txt_cantidadOrigen.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        lbl_cantidadDestino.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_cantidadDestino.setToolTipText("");

        btn_convertir.setText("Convertir");
        btn_convertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_convertirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lbl_cantidad, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_tipoConversion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                    .addComponent(cmb_tipoConversion, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_convertir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmb_monedaOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(lbl_monedaOrigen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_cantidadOrigen))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmb_monedaDestino, 0, 1, Short.MAX_VALUE)
                    .addComponent(lbl_monedaDestino, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                    .addComponent(lbl_cantidadDestino, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_tipoConversion)
                    .addComponent(lbl_monedaOrigen)
                    .addComponent(lbl_monedaDestino))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmb_tipoConversion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_monedaOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_monedaDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl_cantidadDestino, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_cantidadOrigen)
                    .addComponent(lbl_cantidad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(btn_convertir))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    

    
  
    private void cmb_tipoConversionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_tipoConversionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_tipoConversionActionPerformed

    private void cmb_tipoConversionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_tipoConversionItemStateChanged
        
        if (((JComboBox)evt.getSource()).getSelectedItem().toString()=="Temperaturas"){
            
            cmb_monedaDestino.setModel(new DefaultComboBoxModel<>(temp));
            cmb_monedaOrigen.setModel(new DefaultComboBoxModel<>(temp));
            lbl_monedaOrigen.setText("Temperatura Origen");
            lbl_monedaDestino.setText("Temperatura Destino");
            txt_cantidadOrigen.setText("");
        }else{
            cmb_monedaDestino.setModel(new DefaultComboBoxModel<>(monedas));
            cmb_monedaOrigen.setModel(new DefaultComboBoxModel<>(monedas));
            lbl_monedaOrigen.setText("Moneda Origen");
            lbl_monedaDestino.setText("Moneda Destino");
        }
    }//GEN-LAST:event_cmb_tipoConversionItemStateChanged

    private void btn_convertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_convertirActionPerformed
        String cantidad = txt_cantidadOrigen.getText();
        String origen = cmb_monedaOrigen.getSelectedItem().toString();
        String destino = cmb_monedaDestino.getSelectedItem().toString();
        
        if (esNumero(cantidad)){
          if (!origen.equalsIgnoreCase(destino)){
            switch (cmb_tipoConversion.getSelectedItem().toString()){

                case "Monedas":
                    ConversoMonedas_Logica conversorMonedas = new ConversoMonedas_Logica();
                    double cambio1 = conversorMonedas.calcularCambio(origen,Double.parseDouble(cantidad));
                    double cambio2 = conversorMonedas.calcularCambio(destino, Double.parseDouble(cantidad));
                    double total = cambio1/cambio2;
                    lbl_cantidadDestino.setText(String.valueOf(total));
                break;
                case "Temperaturas":
                    ConversorTemperaturas_logica conversorTemp = new ConversorTemperaturas_logica();

                        switch (origen){
                            case "Celsius":
                                if (destino.equals("Kelvin"))
                                    lbl_cantidadDestino.setText(conversorTemp.celsiusTOkelvin(Double.parseDouble(cantidad)));
                                else{
                                    lbl_cantidadDestino.setText(conversorTemp.celsiusTOfahrenheit(Double.parseDouble(cantidad)));
                            }
                            break;    
                            case "Kelvin":
                                if (destino.equals("Celsius"))
                                    lbl_cantidadDestino.setText(conversorTemp.kelvinTOcelsius(Double.parseDouble(cantidad)));
                                else{
                                    lbl_cantidadDestino.setText(conversorTemp.kelvinTOfahrenheit(Double.parseDouble(cantidad)));
                                }
                            break;
                            case "Fahrenheit":
                                if (destino.equals("Celsius"))
                                    lbl_cantidadDestino.setText(conversorTemp.fahrenheitTOcelsius(Double.parseDouble(cantidad)));
                                else{
                                    lbl_cantidadDestino.setText(conversorTemp.fahrenheitTOkelvin(Double.parseDouble(cantidad)));
                                }
                            break;    
                    }
            }
          }else {
                    
                    lbl_cantidadDestino.setText(cantidad);
                }
          
        }else{
            JOptionPane.showMessageDialog(this, "Error, debe ingresar un número como cantidad",null,JOptionPane.ERROR_MESSAGE);
        
        }
    }//GEN-LAST:event_btn_convertirActionPerformed
public boolean esNumero(String dato){
    boolean resultado = true;
        for (int x=0;x<dato.length();x++){
            if (!(dato.charAt(x)>=48 && dato.charAt(x)<=57)){
            resultado = false;
            }
        }    
    return resultado;
    }
    
    
    private void cmb_monedaOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_monedaOrigenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_monedaOrigenActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
       if (JOptionPane.showConfirmDialog(null, "Desea Salir del Programa?", "Alerta",
        JOptionPane.YES_NO_OPTION)==JOptionPane.OK_OPTION){
           System.exit(0);
       }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConversorMonedasUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConversorMonedasUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConversorMonedasUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConversorMonedasUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConversorMonedasUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_convertir;
    private javax.swing.JComboBox<String> cmb_monedaDestino;
    private javax.swing.JComboBox<String> cmb_monedaOrigen;
    private javax.swing.JComboBox<String> cmb_tipoConversion;
    private javax.swing.JLabel lbl_cantidad;
    private javax.swing.JLabel lbl_cantidadDestino;
    private javax.swing.JLabel lbl_monedaDestino;
    private javax.swing.JLabel lbl_monedaOrigen;
    private javax.swing.JLabel lbl_tipoConversion;
    private javax.swing.JTextField txt_cantidadOrigen;
    // End of variables declaration//GEN-END:variables
}
